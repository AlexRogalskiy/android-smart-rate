apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    libraryGroupId = 'com.g2pdev'
    libraryArtifactId = 'smartrate'

    developerId = 'rankor'
    developerName = 'Artem Smirnov'
    developerEmail = 'artem@smirnov.page'

    libraryDescription = 'Smart rate library for Android written with Koltin, RxJava 2, Dagger 2 and Moxy MVP'
    libraryName = 'android-smart-rate'

    siteUrl = 'https://github.com/RankoR/android-smart-rate'
    gitUrl = 'https://github.com/RankoR/android-smart-rate.git'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/library-release.aar")
            groupId libraryGroupId
            artifactId libraryArtifactId
            version smart_rate_version

            pom.withXml {
                configurations.compile.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

tasks.withType(Javadoc).all {
    enabled = false
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId libraryGroupId
            artifactId libraryArtifactId

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    dryRun = false
    override = false
    publish = true

    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = libraryName
        userOrg = 'rankor'
        licenses = ['Apache-2.0']
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl

        version {
            name = smart_rate_version
            vcsTag = smart_rate_version
        }
    }

    publications = ['Production']
}
